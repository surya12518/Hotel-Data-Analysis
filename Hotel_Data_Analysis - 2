{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "XX4XEAsm2JHE",
        "iy48619S23jL",
        "cOXo-plr3KFQ",
        "1cJFF0KF3Xhj"
      ],
      "authorship_tag": "ABX9TyOTiJ0euqROdYNbuH/oUR0Y",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/surya12518/Hotel-Data-Analysis/blob/main/Hotel_Data_Analysis%20-%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Project Name**    -"
      ],
      "metadata": {
        "id": "XX4XEAsm2JHE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Project Type**    - EDA/Regression/Classification/Unsupervised\n",
        "\n",
        "**Contribution**    - Individual"
      ],
      "metadata": {
        "id": "EwfvR3Bm2U7Y"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Project Summary -**"
      ],
      "metadata": {
        "id": "iy48619S23jL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "KfnpBDAI2-tx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **General Guidelines** : -  "
      ],
      "metadata": {
        "id": "cOXo-plr3KFQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.   Well-structured, formatted, and commented code is required.\n",
        "2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.\n",
        "     \n",
        "     The additional credits will have advantages over other students during Star Student selection.\n",
        "       \n",
        "             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go\n",
        "                       without a single error logged. ]\n",
        "\n",
        "3.   Each and every logic should have proper comments.\n",
        "4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.\n",
        "        \n",
        "\n",
        "```\n",
        "# Chart visualization code\n",
        "```\n",
        "            \n",
        "\n",
        "*   Why did you pick the specific chart?\n",
        "*   What is/are the insight(s) found from the chart?\n",
        "* Will the gained insights help creating a positive business impact?\n",
        "Are there any insights that lead to negative growth? Justify with specific reason.\n",
        "\n",
        "5. You have to create at least 20 logical & meaningful charts having important insights.\n",
        "\n",
        "\n",
        "[ Hints : - Do the Vizualization in  a structured way while following \"UBM\" Rule.\n",
        "\n",
        "U - Univariate Analysis,\n",
        "\n",
        "B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)\n",
        "\n",
        "M - Multivariate Analysis\n",
        " ]\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "40_vWsCc3S9O"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# ***Let's Begin !***"
      ],
      "metadata": {
        "id": "1cJFF0KF3Xhj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ***1. Know Your Data***"
      ],
      "metadata": {
        "id": "oeE-LZmh4AgY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Import Libraries"
      ],
      "metadata": {
        "id": "ygkPhzi04PY0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# All vital libraries in this project\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from google.colab import drive"
      ],
      "metadata": {
        "id": "NpeS6Dsd4cq6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Dataset Loading"
      ],
      "metadata": {
        "id": "C6DeXQp44XTU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Dataset loading from drive\n",
        "drive.mount(\"/content/drive\")\n",
        "hotel = pd.read_csv(\"/content/drive/MyDrive/Practice data/project data/Hotel Bookings.csv\")"
      ],
      "metadata": {
        "id": "TFOtJNHR4xM8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Dataset First View"
      ],
      "metadata": {
        "id": "iEB8DUzc48Un"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.head()"
      ],
      "metadata": {
        "id": "9nOqSS8N4lZq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Dataset Rows & Columns count"
      ],
      "metadata": {
        "id": "vQ8y3l4x5V3G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.shape"
      ],
      "metadata": {
        "id": "mPMMAIaI5XYC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Dataset Information"
      ],
      "metadata": {
        "id": "g8NduYid5G62"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.info()"
      ],
      "metadata": {
        "id": "MZanB4wY5BdM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Duplicate Values"
      ],
      "metadata": {
        "id": "cWGVS1yz5tBa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.duplicated().sum()"
      ],
      "metadata": {
        "id": "0YcZJBWt5wp9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Missing Values/Null Values"
      ],
      "metadata": {
        "id": "vXh8KL_J6G8M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking how many null values are in each column\n",
        "hotel.isnull().sum()"
      ],
      "metadata": {
        "id": "Vx6xuY_J5Npu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### What did you know about your dataset?"
      ],
      "metadata": {
        "id": "Nrihayr163j0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "The hotel dataset, encompassing 119,390 rows and 32 columns, provides a comprehensive overview of various facets of hotel reservations. Among these rows, 31,994 are duplicates, while 4 columns exhibit null values, with the 'company' column having the highest count and 'children' the lowest. The dataset comprises diverse data types and indicators, encapsulating critical information for each reservation entry. Key attributes include the type of hotel, cancellation status, lead time, arrival details (year, month, week number, day of the month), stay duration on weekends and weekdays, guest demographics (adults, children, babies), meal type, guest country, market segment, and distribution channel. Additionally, it captures whether the guest is a repeated visitor, history of cancellations and previous bookings, room details (reserved and assigned types), booking modifications, deposit type, agent and company IDs, waiting list duration, customer type, average daily rate, car parking requests, special requests, reservation status, and related dates. This rich dataset encompasses the entire lifecycle of hotel reservations, providing valuable insights into booking patterns, guest characteristics, and operational dynamics from booking to check-out."
      ],
      "metadata": {
        "id": "sO6tjn4i63Bg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ***2. Understanding Your Variables***"
      ],
      "metadata": {
        "id": "5YxoLHPo7NKd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.describe()"
      ],
      "metadata": {
        "id": "qKfP7DcF6Vaj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.info()"
      ],
      "metadata": {
        "id": "iAs0UaiS7fKD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Variables Description"
      ],
      "metadata": {
        "id": "kVaVY3Dv7p1Q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "The hotel dataset, spanning 119,390 rows and 32 columns, serves as a comprehensive narrative of the hotel reservation journey. Within this narrative, 31,994 duplicate entries hint at recurring themes, while 4 columns, notably 'company,' unveil gaps in the story. Each column is a character with a unique role: 'hotel' sets the stage, 'is_canceled' adds suspense, 'lead_time' measures anticipation, and 'arrival_date' details the timeline. From weekend rendezvous to weekday retreats, the script delves into guest demographics, culinary preferences, and global origins. 'Booking_changes' introduces plot twists, 'adr' sets the pricing narrative, and 'reservation_status' unveils the climax. In this vibrant story, each entry captures the essence of a hotel stay, weaving a tale of anticipation, uniqueness, and dynamic interactions from reservation to check-out."
      ],
      "metadata": {
        "id": "bYm6dsHO8GrP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Check Unique Values for each variable."
      ],
      "metadata": {
        "id": "HhSBPugy8OUk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Check Unique Values for each variable.\n",
        "for variable in hotel.columns:\n",
        "  print(hotel.value_counts(variable))\n",
        "  print()\n",
        "  print(\"././././././././././././././././\")\n",
        "  print()"
      ],
      "metadata": {
        "id": "RjVAu3zK7iSI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ***3. Data Wrangling***"
      ],
      "metadata": {
        "id": "VhJWDDzM8svm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Data Wrangling Code"
      ],
      "metadata": {
        "id": "0-hOqV3j9hrm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hotel.shape"
      ],
      "metadata": {
        "id": "h5I8aCKI97wz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Removing Duplicates\n",
        "hotel.drop_duplicates(inplace= True)"
      ],
      "metadata": {
        "id": "Bw3qH0-48nKL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Rechecking shape for confirmation\n",
        "hotel.shape"
      ],
      "metadata": {
        "id": "2I3TImjJ9yUk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# First is children that have only 4 null values present datatype of the row is float.\n",
        "# Simply i will drop null values from children because this is neglible in respect to no. of rows\n",
        "\n",
        "hotel.dropna(subset= [\"children\"], inplace = True, axis= 0)"
      ],
      "metadata": {
        "id": "YT3Gp1cq-qiI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Second is a country that has 452 null values and datatype is an object.\n",
        "# Filling it with mode of country columns because it is also very less respect to rows\n",
        "\n",
        "hotel[\"country\"].fillna(hotel[\"country\"].mode()[0], inplace= True)"
      ],
      "metadata": {
        "id": "_CXKVAWZ_dT-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Agent and Company columns have too many null values it can affect our whole dataset so we will leave it untouched.\n",
        "\n",
        "We will clear it at the time of performing visualization time."
      ],
      "metadata": {
        "id": "OGjuG9bN_wMK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# checking for null values present or not\n",
        "hotel.isnull().sum()"
      ],
      "metadata": {
        "id": "RVl6Gjt4_rZQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "### What all manipulations have you done and insights you found?"
      ],
      "metadata": {
        "id": "wf9B9ybGAD7i"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data cleaning: For cleaning Frist removed all duplicate values that were present. Then, Dealing with Null values. Four columns have Null values. In the first, only 4 columns have null values so simply removed all. In the second 452 columns fill all with mode value. In the Third and last so many null values are present fill all with custom id because those columns are id columns and we could not fill mean, median, or mode because id is unique for everyone."
      ],
      "metadata": {
        "id": "0p-FuMpjAKpD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***"
      ],
      "metadata": {
        "id": "md2VLSM70Tjy"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Chart - 1"
      ],
      "metadata": {
        "id": "y4g0g9k60c8O"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Chart - 1 visualization code\n",
        "# QUESTION:- How does the average daily rate (adr) vary by month and market segment?\n",
        "\n",
        "# Creating a subset of data\n",
        "hotel_adr = hotel[[\"arrival_date_month\", \"market_segment\", \"adr\"]]"
      ],
      "metadata": {
        "id": "aZB3HfXcANNV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set the style of the visualization\n",
        "sns.set(style=\"darkgrid\")\n",
        "\n",
        "# Plot the line chart\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.lineplot(x='arrival_date_month', y='adr', hue='market_segment', data=hotel_adr, marker='o')\n",
        "plt.title('Average Daily Rate (ADR) Variation by Month and Market Segment')\n",
        "plt.xlabel('Month')\n",
        "plt.ylabel('Average Daily Rate (ADR)')\n",
        "plt.xticks(rotation= 90)\n",
        "plt.legend(title='Market Segment', loc='upper right')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "On98_5Pu1fCz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1. Why did you pick the specific chart?"
      ],
      "metadata": {
        "id": "HN0srBEV2gUO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "A line chart is a fitting choice for visualizing the fluctuation in the average daily rate (ADR) by month and market segment due to its ability to convey temporal trends and facilitate multi-series comparisons. The x-axis representing months enables a clear temporal sequence, allowing the viewer to track ADR variations over time. The chart's design accommodates multiple lines, each corresponding to a distinct market segment, fostering a direct visual comparison of ADR changes across segments. The continuity emphasized by the lines helps showcase the sequential order of data, and the chart's capacity to reveal patterns aids in identifying trends or fluctuations in ADR values over the course of months and among different market segments. Overall, the line chart offers an insightful and intuitive presentation, unraveling the nuanced narrative of ADR dynamics in relation to both temporal and segment-specific dimensions."
      ],
      "metadata": {
        "id": "GGkuJvym2eBQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2. What is/are the insight(s) found from the chart?"
      ],
      "metadata": {
        "id": "XLSVe-6B5euL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "The line chart portraying Average Daily Rate (ADR) variation by month and market segment reveals a consistent pattern across different segments. Notably, the Online Travel Agency (Online TA) segment consistently commands the highest ADR values each month, while the Complementary segment consistently records the lowest ADR values. This consistent contrast underscores distinct pricing dynamics among market segments.\n",
        "\n",
        "In the subsequent analysis focused on specific market segments, including Online TA, Offline TA/To, Direct, Corporate, and Aviation, a nuanced seasonal pattern emerges. ADR values peak in August, marking the zenith, and then follow a declining trend until January across Online TA, Offline TA/To, Direct, and Corporate segments. Intriguingly, the Aviation segment exhibits a lesser impact from seasonal fluctuations, maintaining relatively consistent ADR values with the lowest observed around February. This dual perspective provides a comprehensive understanding of ADR dynamics, emphasizing both inter-segment variations and distinct seasonality within specific market segments."
      ],
      "metadata": {
        "id": "EZvnBBin5hAm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Chart - 2"
      ],
      "metadata": {
        "id": "BNrL4CjO6CF-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Chart - 2 visualization code\n",
        "# Question:- What is the distribution of the number of adults, children, and babies in the bookings?"
      ],
      "metadata": {
        "id": "1YItqOQL115K"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Sum each column to get total counts\n",
        "total_adults = hotel['adults'].sum()\n",
        "total_children = hotel['children'].sum()\n",
        "total_babies = hotel['babies'].sum()\n",
        "\n",
        "# Create a pie chart\n",
        "labels = ['Adults', 'Children', 'Babies']\n",
        "sizes = [total_adults, total_children, total_babies]\n",
        "\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90, colors=['skyblue', 'lightgreen', 'lightcoral'])\n",
        "plt.title('Distribution of Guests')\n",
        "plt.legend()\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "v2OVGHYS6HaZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1. Why did you pick the specific chart?"
      ],
      "metadata": {
        "id": "7p3HG8Wo6SxT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "A pie plot is well-suited for visualizing the distribution of categorical data, especially when you want to understand the proportions or percentages of each category within a whole. In the context of the distribution of the number of adults, children, and babies in hotel bookings, a pie plot can effectively convey the composition of guests in terms of these categories."
      ],
      "metadata": {
        "id": "UPsqFM3b6RpU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2. What is/are the insight(s) found from the chart?"
      ],
      "metadata": {
        "id": "kp9tj0Cl6Zsg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "-->Adults constitute the majority of the guests, representing 92.6% of the total.\n",
        "\n",
        "-->Children account for a smaller but still notable portion, making up 6.8% of the guests.\n",
        "\n",
        "-->Babies are the least represented group, comprising only 0.5% of the total guests."
      ],
      "metadata": {
        "id": "-HbndjCG6i86"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Chart - 3"
      ],
      "metadata": {
        "id": "yToCspTW7CH3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Chart - 3 visualization code\n",
        "# Question:- What are the top 10 countries of the guests and how many bookings did they make?\n",
        "\n",
        "# Creating Sub Data\n",
        "sub_hotel = hotel.loc[:,[\"country\", \"is_canceled\"]]\n",
        "\n",
        "# Filter only non-canceled bookings\n",
        "non_canceled_booking = sub_hotel[sub_hotel['is_canceled'] == 0]\n",
        "\n",
        "# Group by country and count the number of bookings\n",
        "result = non_canceled_booking.groupby(\"country\")[\"is_canceled\"].count()\n",
        "top_countries = result.sort_values(ascending= False).head(10).reset_index()\n",
        "\n",
        "# Plot donut chart\n",
        "explode = (0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05)\n",
        "plt.pie(top_countries[\"is_canceled\"].to_list(), labels= top_countries[\"country\"].to_list(),\n",
        "        autopct= \"%1.1f%%\", startangle= 45, pctdistance= 0.85, explode= explode)\n",
        "\n",
        "\n",
        "centre_circle = plt.Circle((0, 0), 0.50, fc='white')\n",
        "fig = plt.gcf()\n",
        "\n",
        "fig.gca().add_artist(centre_circle)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ZIFsHnvn6Kb-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1. Why did you pick the specific chart?"
      ],
      "metadata": {
        "id": "LV7-QY1R7ku8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "A donut plot, also known as a doughnut chart, can be effective for visualizing the distribution of bookings among the top 10 countries of guests. The circular shape allows for easy comparison of proportions, making it suitable for showcasing the contribution of each country to the total number of bookings."
      ],
      "metadata": {
        "id": "JYtgZ5fu7i0N"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2. What is/are the insight(s) found from the chart?"
      ],
      "metadata": {
        "id": "WonCNZAH8GxG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "PRT (Portugal): The most visited country, comprising 34.2% of the total bookings.\n",
        "\n",
        "GBR (United Kingdom): The second most visited country, with a share of 16.1%.\n",
        "\n",
        "FRA (France): The third most visited country, representing 13.6% of the total bookings.\n",
        "\n",
        "ESP (Spain): Following closely, Spain is the fourth most visited country, with a share of 10.3%.\n",
        "\n",
        "It's also noteworthy that the United States (USA) is among the top 10 countries but has a lower percentage share compared to the others. This information provides valuable insights into the popularity of different countries among the guests making bookings."
      ],
      "metadata": {
        "id": "_KJx02pH8FQQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Chart - 4"
      ],
      "metadata": {
        "id": "NE9P-aFc8fAm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Chart - 4 visualization code\n",
        "# Question:- How does the deposit type affect the cancellation rate?\n",
        "\n",
        "\n",
        "# Grouping data\n",
        "hotel_grouped_deposit = hotel.groupby(\"deposit_type\")[\"is_canceled\"].value_counts(normalize= True).unstack()*100\n",
        "\n",
        "# Ploting stacked bar plot\n",
        "sns.barplot(x=hotel_grouped_deposit.index, y= hotel_grouped_deposit[0], color=\"lightblue\", label='0')\n",
        "sns.barplot(x=hotel_grouped_deposit.index, y= hotel_grouped_deposit[1], color=\"black\", label='1')\n",
        "\n",
        "plt.xlabel('Deposit Type')\n",
        "plt.ylabel('Cancellation Rate')\n",
        "plt.title('Cancellation Rate by Deposit Type')\n",
        "\n",
        "# Add legend to the frame\n",
        "plt.legend(title='is_canceled', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "# Display the plot\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "4wAiR0P06_B-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1. Why did you pick the specific chart?"
      ],
      "metadata": {
        "id": "Ar5HVE2w8tU8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "A stacked plot is particularly suitable for visualizing how the deposit type affects the cancellation rate because it allows you to observe the composition of the cancellation rate for each deposit type, making it easier to compare the contribution of different deposit types to the overall cancellation rate."
      ],
      "metadata": {
        "id": "GSquLVpT8tGD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2. What is/are the insight(s) found from the chart?"
      ],
      "metadata": {
        "id": "3PmuyRaj887g"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Non-Refundable Deposit Type: This deposit type has the highest cancellation rate, indicating that bookings with a non-refundable deposit are more likely to be canceled.\n",
        "\n",
        "No Deposit and Refundable Deposit Types: Both these deposit types have a similar cancellation rate, approximately around 25%. This suggests that bookings with no deposit or a refundable deposit have a comparable likelihood of being canceled."
      ],
      "metadata": {
        "id": "ulsgvz3d9IfL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Chart - 5"
      ],
      "metadata": {
        "id": "Mrx-FKI_9fxa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Chart - 5 visualization code\n",
        "# Question:- What are the most common meal types booked by the guests?\n",
        "\n",
        "# Counting most common meal type\n",
        "meal = hotel[\"meal\"].value_counts()\n",
        "\n",
        "# Creating a bar plot\n",
        "sns.barplot(x = meal.index, y = meal)\n",
        "plt.xlabel('Meal Type')\n",
        "plt.ylabel('No. of Orders')\n",
        "plt.title('Most Common Meal Ordered by Guests')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "adc1iE-t9pTm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 1. Why did you pick the specific chart?"
      ],
      "metadata": {
        "id": "9nzaLP_-9zRg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Bar plots are ideal for illustrating the distribution of categorical data like meal types. Each bar represents a specific meal type, with height indicating frequency. This simplicity enables easy comparison, providing a clear and immediate view of the most common meal types and their respective counts for straightforward interpretation."
      ],
      "metadata": {
        "id": "NUMXLWx6-NU1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### 2. What is/are the insight(s) found from the chart?"
      ],
      "metadata": {
        "id": "4g_91en--Vzq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "The bar plot shows that the Bed and Breakfast (BB) meal type is the most commonly booked meal, as indicated by the highest bar. On the other hand, the Full Board (FB) meal type has a lower frequency of bookings, as reflected by its shorter bar. This visual representation allows for a quick and clear understanding of the relative popularity of different meal types among the guests."
      ],
      "metadata": {
        "id": "NvX3Rxi9-PnV"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "kZT0bM868mDP"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}